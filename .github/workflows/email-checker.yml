name: Yandex Mail to Telegram Notifier

on:
  schedule:
    # –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
    - cron: '*/5 * * * *'
  # –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å workflow –≤—Ä—É—á–Ω—É—é –∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ GitHub
  workflow_dispatch:
    inputs:
      debug:
        description: '–í–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏'
        required: false
        default: 'false'
        type: boolean

# –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è workflow
permissions:
  contents: write

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –≤—Å–µ–≥–æ workflow
env:
  PYTHON_VERSION: '3.9'

jobs:
  check-email:
    name: Check Yandex Mail and Send Telegram Notifications
    runs-on: ubuntu-latest
    
    steps:
    # –®–∞–≥ 1: –ü–æ–ª—É—á–∏—Ç—å –∫–æ–¥ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # –¢–æ–∫–µ–Ω –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é (–¥–ª—è –∫–æ–º–º–∏—Ç–æ–≤)
        token: ${{ secrets.GITHUB_TOKEN }}
        # –ü–æ–ª–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã git
        fetch-depth: 0
        
    # –®–∞–≥ 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        # –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ pip –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—É—Å–∫–æ–≤
        cache: 'pip'
        
    # –®–∞–≥ 3: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ email
        pip install imapclient
        
    # –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏)
    - name: Debug configuration
      if: ${{ github.event.inputs.debug == 'true' }}
      env:
        YANDEX_EMAIL: ${{ secrets.YANDEX_EMAIL }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TARGET_SENDER: ${{ secrets.TARGET_SENDER }}
        TARGET_SUBJECT_KEYWORDS: ${{ secrets.TARGET_SUBJECT_KEYWORDS }}
      run: |
        echo "=== DEBUG CONFIGURATION ==="
        echo "YANDEX_EMAIL: $YANDEX_EMAIL"
        echo "TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:0:10}..."
        echo "TELEGRAM_CHAT_ID: $TELEGRAM_CHAT_ID"
        echo "TARGET_SENDER: $TARGET_SENDER"
        echo "TARGET_SUBJECT_KEYWORDS: $TARGET_SUBJECT_KEYWORDS"
        echo "==========================="
        
    # –®–∞–≥ 5: –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
    - name: Run email notifier
      env:
        # –î–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –Ø–Ω–¥–µ–∫—Å.–ü–æ—á—Ç–µ
        YANDEX_EMAIL: ${{ secrets.YANDEX_EMAIL }}
        YANDEX_APP_PASSWORD: ${{ secrets.YANDEX_APP_PASSWORD }}
        # –î–∞–Ω–Ω—ã–µ –¥–ª—è Telegram –±–æ—Ç–∞
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        # –ö—Ä–∏—Ç–µ—Ä–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–∏—Å–µ–º
        TARGET_SENDER: ${{ secrets.TARGET_SENDER }}
        TARGET_SUBJECT_KEYWORDS: ${{ secrets.TARGET_SUBJECT_KEYWORDS }}
      run: |
        echo "üïí –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—á—Ç—ã..."
        echo "–í—Ä–µ–º—è: $(date)"
        python mail_notifier.py
        echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        
    # –®–∞–≥ 6: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    - name: Commit email state file
      if: always()
      env:
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ git –¥–ª—è –∫–æ–º–º–∏—Ç–æ–≤
        GIT_USER: 'GitHub Action'
        GIT_EMAIL: 'action@github.com'
      run: |
        echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è..."
        if [ -f email_state.json ]; then
          echo "‚úÖ –§–∞–π–ª email_state.json –Ω–∞–π–¥–µ–Ω, –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–º–∏—Ç..."
          
          # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ git
          git config --local user.name "$GIT_USER"
          git config --local user.email "$GIT_EMAIL"
          
          # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤ –∏–Ω–¥–µ–∫—Å
          git add email_state.json
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ –∫–æ–º–º–∏—Ç –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
          if git diff --staged --quiet; then
            echo "‚ÑπÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç, –∫–æ–º–º–∏—Ç –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è"
          else
            echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è..."
            git commit -m "Update email state [skip ci]"
            
            echo "üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
            git push origin main
            
            echo "‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ"
          fi
        else
          echo "‚ÑπÔ∏è –§–∞–π–ª email_state.json –Ω–µ –Ω–∞–π–¥–µ–Ω, –∫–æ–º–º–∏—Ç –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è"
        fi
        
    # –®–∞–≥ 7: –û—á–∏—Å—Ç–∫–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    - name: Cleanup
      if: always()
      run: |
        echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        echo "–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: $(date)"
        
  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π job –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∂–µ)
  # monitor:
  #   name: Health Check
  #   runs-on: ubuntu-latest
  #   needs: check-email
  #   if: always()
  #   steps:
  #     - name: Notify health status
  #       run: |
  #         echo "Health check completed"

# –°—Ç—Ä–∞—Ç–µ–≥–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (–¥–ª—è –±—É–¥—É—â–∏—Ö —É–ª—É—á—à–µ–Ω–∏–π)
# strategy:
#   matrix:
#     python-version: [3.8, 3.9, '3.10']

# –û–ø–æ–≤–µ—â–µ–Ω–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∂–µ)
# notifications:
#   email:
#     recipients:
#       - your-email@example.com
#     on_failure: always
